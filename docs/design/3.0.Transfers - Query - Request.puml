/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

 Contributors
 --------------
 This is the official list (alphabetical ordering) of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.

 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Coil
 - Donovan Changfoot <donovan.changfoot@coil.com>

 * Crosslake
 - Pedro Sousa Barreto <pedrob@crosslaketech.com>

 * ModusBox
 - Miguel de Barros <miguel.debarros@modusbox.com>
 - Roman Pietrzak <roman.pietrzak@modusbox.com>

 --------------
******'/

@startuml
' declate title
title 3.0. Transfer Query Request

autonumber
' Actor Keys:
' boundary - APIs/Interfaces, etc
' collections - Kafka Topics
' control - Event Handlers
' entity - Command Handlers
' database - Persistance Store

' declare actors
actor "PayerFSP" as PAYER
boundary "ML-API-ADAPTER\nService" as MLAPI
entity "Transfers\nQuery\nHandler" as TRANSFER_QUERY
database "Transfer Query Store" as TRANSFER_QUERY_STORE
collections "Topic: MLIngressEvents" as TOPIC_MLINGRESS_EVT
collections "Topic: NotificationsDomainEvt" as TOPIC_NOTIFICATIONS_EVT
collections "Topic: TransferQueryReponse" as TOPIC_TRANSFER_QUERY_RESPONSE

box "Participants" #LightSlateGrey
  participant PAYER
end box

box "ML API Adapter Service" #LightBlue
  participant MLAPI
  participant TOPIC_MLINGRESS_EVT
  participant TOPIC_NOTIFICATIONS_EVT
end box

box "Query Services" #LightCyan
  participant TRANSFER_QUERY
  participant TRANSFER_QUERY_STORE
  participant TOPIC_TRANSFER_QUERY_RESPONSE
end box

' start flow
PAYER <-> MLAPI: GET Transfer Request

MLAPI --> TOPIC_MLINGRESS_EVT: Publish TransferQueryRequest

TOPIC_MLINGRESS_EVT --> TRANSFER_QUERY: Consume TransferQueryRequest - Transfer GET request from PayerFSP
TRANSFER_QUERY <-> TRANSFER_QUERY_STORE: Retrieve Transfer

alt Transfer was Found
  TRANSFER_QUERY --> TOPIC_TRANSFER_QUERY_RESPONSE: Publish - TransferQueryResponse
  TOPIC_TRANSFER_QUERY_RESPONSE --> MLAPI: Consume - TransferQueryResponse
  MLAPI <-> PAYER: PUT Transfer GET Response
  MLAPI --> TOPIC_NOTIFICATIONS_EVT: Publish AckNotificationEvt
else Transfer not Found
  TRANSFER_QUERY --> TOPIC_TRANSFER_QUERY_RESPONSE: Publish - TransferNotFoundQueryResponse
  TOPIC_TRANSFER_QUERY_RESPONSE --> MLAPI: Consume - TransferNotFoundQueryResponse
  MLAPI <-> PAYER: PUT Transfer Error (Transfer Not Found)
  MLAPI --> TOPIC_NOTIFICATIONS_EVT: Publish AckNotificationEvt
end

@enduml
