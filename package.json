{
  "name": "arch_poc",
  "version": "0.1.0",
  "description": "mojaloop arch poc all-in-one.",
  "license": "Apache-2.0",
  "homepage": "https://github.com/mojaloop/poc-architecture",
  "bugs": {
    "url": "https://github.com/mojaloop/<repo-name>/issues#readme"
  },
  "author": "Pedro Sousa Barreto <pedrob@crosslaketech.com>",
  "contributors": [
    "Miguel de Barros <miguel.debarros@modusbox.com>",
    "Donovan Changfoot <donovan.changfoot@coil.com>",
    "Roman Pietrzak <roman.pietrzak@modusbox.com>"
  ],
  "pre-commit": [
    "dep:check",
    "build",
    "lint",
    "test:unit"
  ],
  "scripts": {
    "start": "npx lerna run --no-progress --stream  start",
    "start:participants": "npm run build --scope='@mojaloop-poc/participants' && npx lerna run --no-progress --stream --scope='@mojaloop-poc/participants' start",
    "start:transfers": "npm run build --scope='@mojaloop-poc/transfers' && npx lerna run --no-progress --stream --scope='@mojaloop-poc/transfers' start",
    "start:ml": "npx lerna run --no-progress --stream --scope='@mojaloop-poc/ml-api-adapter' start",
    "start:sim": "npx lerna run --no-progress --stream --scope='@mojaloop-poc/dev-tools' simulator",
    "build": "npx lerna run --stream build",
    "watch": "npx lerna run --no-progress --stream --parallel watch",
    "clean": "npm run clean:dist && npm run clean:npm",
    "clean:npm": "npx lerna clean",
    "clean:dist": "npx lerna run clean",
    "postinstall": "npx lerna bootstrap",
    "pretest": "echo 'FIX ME'",
    "standard": "npm run lint'",
    "lint": "npx lerna run lint",
    "lint:participants": "npx lerna run lint --scope='@mojaloop-poc/participants'",
    "lint:transfers": "npx lerna run lint --scope='@mojaloop-poc/transfers'",
    "lint:fix": "npx lerna run lint:fix",
    "test:unit": "npx lerna run test:unit",
    "test:coverage": "npx lerna run test:coverage",
    "test:coverage-check": "npx lerna run test:coverage-check",
    "test:integration": "npx lerna run test:integration",
    "audit:resolve": "npx lerna run audit:resolve",
    "audit:check": "npx lerna run audit:check",
    "dep:check": "npx lerna run --no-progress --stream dep:check",
    "dep:update": "npx lerna run --no-progress --stream dep:update",
    "docker:kafka:start": "docker-compose up -d kafka",
    "docker:kafka:stop": "docker-compose stop kafka",
    "docker:kafka:logs": "docker-compose logs -f kafka",
    "docker:redis:start": "docker-compose up -d redis",
    "docker:redis:stop": "docker-compose stop redis",
    "docker:redis:logs": "docker-compose logs -f redis",
    "docker:sim:start": "docker-compose up -d simulator",
    "docker:sim:stop": "docker-compose stop simulator",
    "docker:sim:logs": "docker-compose logs -f simulator",
    "docker:store:start": "docker-compose up -d kafka redis",
    "docker:store:stop": "docker-compose stop kafka redis",
    "docker:store:logs": "docker-compose logs -f kafka redis",
    "docker:backend:start": "docker-compose up -d kafka redis simulator",
    "docker:backend:stop": "docker-compose stop kafka redis simulator",
    "docker:backend:logs": "docker-compose logs -f kafka redis simulator"
  },
  "dependencies": {
    "knex": "^0.21.1",
    "lerna": "^3.22.0",
    "redis": "^3.0.2"
  },
  "devDependencies": {
    "pre-commit": "^1.2.2"
  }
}
